export declare type Coords = {
    'lat': number;
    'lng': number;
};
export declare type TransportationType = 'cycling' | 'driving' | 'driving+train' | 'public_transport' | 'walking' | 'coach' | 'bus' | 'train' | 'ferry' | 'driving+ferry' | 'cycling+ferry' | 'cycling+public_transport';
export declare type RouteResponseTransportationMode = 'car' | 'parking' | 'boarding' | 'walk' | 'bike' | 'bike_parking' | 'train' | 'rail_national' | 'rail_overground' | 'rail_underground' | 'rail_dlr' | 'bus' | 'cable_car' | 'plane' | 'ferry' | 'coach';
export declare type RoutesResponseRoutePartType = 'basic' | 'start_end' | 'road' | 'public_transport';
export declare type RoutesResponseFareTicketType = 'single' | 'week' | 'month' | 'year';
export declare type LocationRequest = {
    'id': string;
    'coords': Coords;
};
export declare type MaxChangesRequest = {
    enabled: boolean;
    limit: number;
};
export declare type TransportationRequestCommons = {
    'type': TransportationType;
    'disable_border_crossing'?: boolean;
    'pt_change_delay'?: number;
    'walking_time'?: number;
    'driving_time_to_station'?: number;
    'cycling_time_to_station'?: number;
    'parking_time'?: number;
    'boarding_time'?: number;
    'max_changes'?: MaxChangesRequest;
};
export declare type ResponseRoutePart = {
    'id': number;
    'type': RoutesResponseRoutePartType;
    'mode': RouteResponseTransportationMode;
    'directions': string;
    'distance': number;
    'travel_time': number;
    'coords': Array<Coords>;
    'direction'?: string;
    'road'?: string;
    'turn'?: string;
    'line'?: string;
    'departure_station'?: string;
    'arrival_station'?: string;
    'departs_at'?: string;
    'arrives_at'?: string;
    'num_stops'?: number;
};
export declare type ResponseRoute = {
    'departure_time': string;
    'arrival_time': string;
    'parts': Array<ResponseRoutePart>;
};
export declare type ResponseFareTicket = {
    'type': RoutesResponseFareTicketType;
    'price': number;
    'currency': string;
};
export declare type ResponseFaresBreakdownItem = {
    'modes': Array<RouteResponseTransportationMode>;
    'route_part_ids': Array<number>;
    'tickets': Array<ResponseFareTicket>;
};
export declare type ResponseFares = {
    'breakdown': Array<ResponseFaresBreakdownItem>;
    'tickets_total': Array<ResponseFareTicket>;
};
export declare type RangeRequestNoMaxResults = {
    'enabled': boolean;
    'width': number;
};
export declare type RangeRequestFull = RangeRequestNoMaxResults & {
    'max_results': number;
};
export declare type TravelTimeResponseFeaturesPublicTransport = {
    'date_start': string;
    'date_end': string;
};
export declare type TravelTimeResponsePeriodSearchType = 'arrival.many_to_one' | 'arrival.one_to_many';
export declare type TravelTimeResponseFeatureSupportedTransport = {
    'search_type': TravelTimeResponsePeriodSearchType;
    'transportation_mode': TransportationType;
};
export declare type TravelTimeResponseFeaturePeriod = {
    'time_period': string;
    'supported': Array<TravelTimeResponseFeatureSupportedTransport>;
};
export declare type TravelTimeResponseFeatureTimeFilterFast = {
    'periods': Array<TravelTimeResponseFeaturePeriod>;
};
export declare type TravelTimeResponseFeatureType = {
    'public_transport'?: TravelTimeResponseFeaturesPublicTransport;
    'time_filter_fast'?: TravelTimeResponseFeatureTimeFilterFast;
    'cross_country_modes'?: Array<TransportationType>;
    'fares': boolean;
    'postcodes': boolean;
};
export declare type TravelTimeResponseFeature = {
    'features': TravelTimeResponseFeatureType;
};
export declare type TravelTimeResponseStatistics = {
    'min': number;
    'max': number;
    'mean': number;
    'median': number;
};
export declare type CoarseGridLevelOfDetail = {
    scale_type: 'coarse_grid';
    square_size: number;
};
export declare type SimpleLevelOfDetail = {
    scale_type: 'simple';
    level: 'lowest' | 'low' | 'medium' | 'high' | 'highest';
};
export declare type SimpleNumericLevelOfDetail = {
    scale_type: 'simple_numeric';
    level: number;
};
export declare type LevelOfDetail = CoarseGridLevelOfDetail | SimpleLevelOfDetail | SimpleNumericLevelOfDetail;
export declare type TransportationFast = 'public_transport' | 'driving' | 'driving+public_transport' | 'driving+ferry' | 'cycling' | 'cycling+ferry' | 'walking' | 'walking+ferry';
