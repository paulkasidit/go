{"ast":null,"code":"var _jsxFileName = \"/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/MainControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./Main/Main.css\";\nimport AirbnbAPI from './Main/AirbnbAPI';\nimport GoogleMapsAPI from './Main/GoogleMapsAPI';\nimport LocationMarker from \"./Main/LocationMarker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainControl() {\n  _s();\n  //Hooks to set the current location for user\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n\n  //Default location that will be rendered on page loading. \n  const userCurrentLocation = {\n    center: {\n      lat: lat,\n      lng: lng\n    },\n    zoom: 12\n  };\n\n  //Getting the user's current location \n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLng(position.coords.longitude);\n    });\n  });\n  let currentlyVisibleState = /*#__PURE__*/_jsxDEV(GoogleMapsAPI, {\n    userCurrentLocation: userCurrentLocation,\n    pinComponentOne: /*#__PURE__*/_jsxDEV(LocationMarker, {\n      lat: userCurrentLocation.center.lat,\n      lng: userCurrentLocation.center.lng,\n      text: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 53\n    }, this),\n    children: [\"pinComponentTwo = \", /*#__PURE__*/_jsxDEV(LocationMarker, {\n      lat: 36.7378,\n      lng: 119.7871,\n      text: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: currentlyVisibleState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_s(MainControl, \"xt7ae38ibc/e0a/2PPAC15ZSSyM=\");\n_c = MainControl;\n;\nexport default MainControl;\nvar _c;\n$RefreshReg$(_c, \"MainControl\");","map":{"version":3,"names":["React","useState","useEffect","AirbnbAPI","GoogleMapsAPI","LocationMarker","MainControl","lat","setLat","lng","setLng","userCurrentLocation","center","zoom","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","currentlyVisibleState"],"sources":["/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/MainControl.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport \"./Main/Main.css\"\nimport AirbnbAPI from './Main/AirbnbAPI';\nimport GoogleMapsAPI from './Main/GoogleMapsAPI';\nimport LocationMarker from \"./Main/LocationMarker\";\n\nfunction MainControl (){\n  //Hooks to set the current location for user\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n\n  //Default location that will be rendered on page loading. \n  const userCurrentLocation = {\n    center: {lat: lat, lng: lng}, \n    zoom: 12\n  }\n  \n  //Getting the user's current location \n  useEffect(() => {\n      navigator.geolocation.getCurrentPosition(function(position){\n      setLat(position.coords.latitude)\n      setLng(position.coords.longitude)\n    });\n  })\n\n  let currentlyVisibleState =  <GoogleMapsAPI \n                                userCurrentLocation = {userCurrentLocation}\n                                pinComponentOne =  {<LocationMarker \n                                lat = {userCurrentLocation.center.lat}\n                                lng = {userCurrentLocation.center.lng}\n                                text = \"Hello\"/>}>\n                                pinComponentTwo = {<LocationMarker \n                                lat = {36.7378}\n                                lng = {119.7871}\n                                text = \"Hello\"/>\n                                }\n                                </GoogleMapsAPI>    \n\n\n    return(\n      <React.Fragment>\n        {currentlyVisibleState}\n      </React.Fragment>\n    ) \n};\n\nexport default MainControl;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACxB,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,cAAc,MAAM,uBAAuB;AAAC;AAEnD,SAASC,WAAW,GAAG;EAAA;EACrB;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEpC;EACA,MAAMU,mBAAmB,GAAG;IAC1BC,MAAM,EAAE;MAACL,GAAG,EAAEA,GAAG;MAAEE,GAAG,EAAEA;IAAG,CAAC;IAC5BI,IAAI,EAAE;EACR,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACZY,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAC;MAC3DT,MAAM,CAACS,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;MAChCT,MAAM,CAACO,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAIC,qBAAqB,gBAAI,QAAC,aAAa;IACb,mBAAmB,EAAIV,mBAAoB;IAC3C,eAAe,eAAK,QAAC,cAAc;MACnC,GAAG,EAAIA,mBAAmB,CAACC,MAAM,CAACL,GAAI;MACtC,GAAG,EAAII,mBAAmB,CAACC,MAAM,CAACH,GAAI;MACtC,IAAI,EAAG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;IAAA,WAAC,oBACA,eAAC,QAAC,cAAc;MAClC,GAAG,EAAI,OAAQ;MACf,GAAG,EAAI,QAAS;MAChB,IAAI,EAAG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;EAG5C,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,UACZY;EAAqB;IAAA;IAAA;IAAA;EAAA,QACP;AAEvB;AAAC,GAtCQf,WAAW;AAAA,KAAXA,WAAW;AAsCnB;AAED,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}