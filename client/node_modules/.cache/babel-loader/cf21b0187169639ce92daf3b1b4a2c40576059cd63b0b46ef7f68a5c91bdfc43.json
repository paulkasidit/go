{"ast":null,"code":"var _jsxFileName = \"/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/MainControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./Main/Main.css\";\nimport AirbnbAPI from './Main/AirbnbAPI';\nimport GoogleMapsAPI from './Main/GoogleMapsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainControl() {\n  _s();\n  //Hooks to set the current location for user\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [userAllowedCurrentLocation, setUserAllowedCurrentLocation] = useState(false);\n\n  //Default location that will be rendered on page loading. \n  const userCurrentLocation = {\n    center: {\n      lat: lat,\n      lng: lng\n    },\n    zoom: 12\n  };\n\n  //Getting the user's current location \n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLng(position.coords.longitude);\n    });\n  });\n  let currentlyVisibleState = /*#__PURE__*/_jsxDEV(GoogleMapsAPI, {\n    currentLocation: userCurrentLocation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: currentlyVisibleState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(MainControl, \"ykGNILMk8an+CpAec19v3zRBeok=\");\n_c = MainControl;\n;\nexport default MainControl;\nvar _c;\n$RefreshReg$(_c, \"MainControl\");","map":{"version":3,"names":["React","useState","useEffect","AirbnbAPI","GoogleMapsAPI","MainControl","lat","setLat","lng","setLng","userAllowedCurrentLocation","setUserAllowedCurrentLocation","userCurrentLocation","center","zoom","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","currentlyVisibleState"],"sources":["/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/MainControl.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport \"./Main/Main.css\"\nimport AirbnbAPI from './Main/AirbnbAPI';\nimport GoogleMapsAPI from './Main/GoogleMapsAPI';\n\nfunction MainControl (){\n  //Hooks to set the current location for user\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [userAllowedCurrentLocation, setUserAllowedCurrentLocation ] = useState(false);\n\n  //Default location that will be rendered on page loading. \n  const userCurrentLocation = {\n    center: {lat: lat, lng: lng}, \n    zoom: 12\n  }\n  \n  //Getting the user's current location \n  useEffect(() => {\n      navigator.geolocation.getCurrentPosition(function(position){\n      setLat(position.coords.latitude)\n      setLng(position.coords.longitude)\n    });\n  })\n\n  let currentlyVisibleState =  <GoogleMapsAPI currentLocation = {userCurrentLocation}/>\n\n    return(\n      <React.Fragment>\n        {currentlyVisibleState}\n      </React.Fragment>\n    ) \n};\n\nexport default MainControl;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACxB,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,sBAAsB;AAAC;AAEjD,SAASC,WAAW,GAAG;EAAA;EACrB;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,0BAA0B,EAAEC,6BAA6B,CAAE,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEpF;EACA,MAAMW,mBAAmB,GAAG;IAC1BC,MAAM,EAAE;MAACP,GAAG,EAAEA,GAAG;MAAEE,GAAG,EAAEA;IAAG,CAAC;IAC5BM,IAAI,EAAE;EACR,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACZa,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAC;MAC3DX,MAAM,CAACW,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;MAChCX,MAAM,CAACS,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAIC,qBAAqB,gBAAI,QAAC,aAAa;IAAC,eAAe,EAAIV;EAAoB;IAAA;IAAA;IAAA;EAAA,QAAE;EAEnF,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,UACZU;EAAqB;IAAA;IAAA;IAAA;EAAA,QACP;AAEvB;AAAC,GA3BQjB,WAAW;AAAA,KAAXA,WAAW;AA2BnB;AAED,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}