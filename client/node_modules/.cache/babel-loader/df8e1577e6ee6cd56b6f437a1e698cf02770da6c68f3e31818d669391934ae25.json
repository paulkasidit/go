{"ast":null,"code":"var _jsxFileName = \"/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/Main/GoogleMapsAPI.js\";\nimport React from \"react\";\nimport GoogleMapReact from 'google-map-react';\nimport Circle from 'google-map-react';\nimport PropTypes from \"prop-types\";\nimport LocationMarker from \"./LocationMarker\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoogleMapsAPI(props) {\n  const {\n    userCurrentLocation,\n    pinsList\n  } = props;\n\n  //Constants for MapBox Isochrone API \n  const urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';\n  const lon = userCurrentLocation.center.lng;\n  const lat = userCurrentLocation.center.lat;\n  const profile = 'driving';\n  const minuts = '60';\n  async function getIso() {\n    const query = await fetch(`${urlBase}${profile}/${lon},${lat}?contours_minutes=${minutes}&polygons=true&access_token=${process.env.REACT_APP_MAPBOX_API_KEY}`, {\n      method: 'GET'\n    });\n    const data = await query.json();\n    console.log(data);\n  }\n  getIso();\n  console.log(pinsList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"googleMapsContainer\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      yesIWantToUseGoogleMapApiInternals: true,\n      center: userCurrentLocation.center,\n      zoom: userCurrentLocation.zoom,\n      children: pinsList.map(pins => {\n        return /*#__PURE__*/_jsxDEV(LocationMarker, {\n          id: pins.id,\n          lat: pins.lat,\n          lng: pins.lng,\n          text: pins.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_c = GoogleMapsAPI;\nGoogleMapsAPI.propTypes = {\n  currentLocation: PropTypes.object,\n  pinComponent: PropTypes.object\n};\nexport default GoogleMapsAPI;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapsAPI\");","map":{"version":3,"names":["React","GoogleMapReact","Circle","PropTypes","LocationMarker","GoogleMapsAPI","props","userCurrentLocation","pinsList","urlBase","lon","center","lng","lat","profile","minuts","getIso","query","fetch","minutes","process","env","REACT_APP_MAPBOX_API_KEY","method","data","json","console","log","key","REACT_APP_GOOGLE_MAPS_API_KEY","zoom","map","pins","id","text","propTypes","currentLocation","object","pinComponent"],"sources":["/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/Main/GoogleMapsAPI.js"],"sourcesContent":["import React from \"react\";\nimport GoogleMapReact from 'google-map-react';\nimport Circle from 'google-map-react';\nimport PropTypes from \"prop-types\"; \nimport LocationMarker from \"./LocationMarker\";\nimport \"./Main.css\";  \n\nfunction GoogleMapsAPI(props) { \n\n  const {userCurrentLocation, pinsList} = props;\n\n  //Constants for MapBox Isochrone API \n  const urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';\n  const lon = userCurrentLocation.center.lng; \n  const lat = userCurrentLocation.center.lat;\n  const profile = 'driving'; \n  const minuts = '60'; \n\n  async function getIso(){\n    const query = await fetch(\n      `${urlBase}${profile}/${lon},${lat}?contours_minutes=${minutes}&polygons=true&access_token=${process.env.REACT_APP_MAPBOX_API_KEY}`,\n        {method: 'GET'}\n    )\n    const data = await query.json();\n    console.log(data); \n  }\n\n  getIso();\n\n  console.log(pinsList)\n  return (\n      <div class = \"googleMapsContainer\">\n        <GoogleMapReact\n                  bootstrapURLKeys = {{\n                    key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n                  }}\n                  yesIWantToUseGoogleMapApiInternals = {true}\n                  center = {userCurrentLocation.center}\n                  zoom = {userCurrentLocation.zoom}\n        >\n        {pinsList.map(pins => {\n                return(\n                  <LocationMarker\n                  id = {pins.id}\n                  lat = {pins.lat}\n                  lng = {pins.lng}\n                  text = {pins.text}\n                  />\n                )\n              }\n          )\n        }\n        </GoogleMapReact>\n      </div>\n  )\n}\n\n\nGoogleMapsAPI.propTypes = { \n  currentLocation: PropTypes.object,\n  pinComponent: PropTypes.object\n}\n\nexport default GoogleMapsAPI;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,YAAY;AAAC;AAEpB,SAASC,aAAa,CAACC,KAAK,EAAE;EAE5B,MAAM;IAACC,mBAAmB;IAAEC;EAAQ,CAAC,GAAGF,KAAK;;EAE7C;EACA,MAAMG,OAAO,GAAG,6CAA6C;EAC7D,MAAMC,GAAG,GAAGH,mBAAmB,CAACI,MAAM,CAACC,GAAG;EAC1C,MAAMC,GAAG,GAAGN,mBAAmB,CAACI,MAAM,CAACE,GAAG;EAC1C,MAAMC,OAAO,GAAG,SAAS;EACzB,MAAMC,MAAM,GAAG,IAAI;EAEnB,eAAeC,MAAM,GAAE;IACrB,MAAMC,KAAK,GAAG,MAAMC,KAAK,CACtB,GAAET,OAAQ,GAAEK,OAAQ,IAAGJ,GAAI,IAAGG,GAAI,qBAAoBM,OAAQ,+BAA8BC,OAAO,CAACC,GAAG,CAACC,wBAAyB,EAAC,EACjI;MAACC,MAAM,EAAE;IAAK,CAAC,CAClB;IACD,MAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,IAAI,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACnB;EAEAR,MAAM,EAAE;EAERU,OAAO,CAACC,GAAG,CAACnB,QAAQ,CAAC;EACrB,oBACI;IAAK,KAAK,EAAG,qBAAqB;IAAA,uBAChC,QAAC,cAAc;MACL,gBAAgB,EAAI;QAClBoB,GAAG,EAAER,OAAO,CAACC,GAAG,CAACQ;MACnB,CAAE;MACF,kCAAkC,EAAI,IAAK;MAC3C,MAAM,EAAItB,mBAAmB,CAACI,MAAO;MACrC,IAAI,EAAIJ,mBAAmB,CAACuB,IAAK;MAAA,UAE1CtB,QAAQ,CAACuB,GAAG,CAACC,IAAI,IAAI;QACd,oBACE,QAAC,cAAc;UACf,EAAE,EAAIA,IAAI,CAACC,EAAG;UACd,GAAG,EAAID,IAAI,CAACnB,GAAI;UAChB,GAAG,EAAImB,IAAI,CAACpB,GAAI;UAChB,IAAI,EAAIoB,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAChB;MAEN,CAAC;IACJ;MAAA;MAAA;MAAA;IAAA;EAEc;IAAA;IAAA;IAAA;EAAA,QACb;AAEZ;AAAC,KAhDQ7B,aAAa;AAmDtBA,aAAa,CAAC8B,SAAS,GAAG;EACxBC,eAAe,EAAEjC,SAAS,CAACkC,MAAM;EACjCC,YAAY,EAAEnC,SAAS,CAACkC;AAC1B,CAAC;AAED,eAAehC,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}