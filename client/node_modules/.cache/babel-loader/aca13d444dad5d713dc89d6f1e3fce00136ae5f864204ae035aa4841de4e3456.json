{"ast":null,"code":"var _jsxFileName = \"/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/TripInfoControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./TripInfo/TripInfo.css\";\nimport TripInfo from './TripInfo/TripInfo';\nimport DateInputForm from './TripInfo/DateInputForm';\nimport StarterQuestionnaire from './TripInfo/StarterQuestionnaire';\nimport ReccomendationContainer from \"./TripInfo/ReccomendationContainer\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TripInfoControl() {\n  _s();\n  // Hooks for checking if user is authenticated, for the current userProfile,\n  // and checking if the user has a profile(to decide what to render)\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [userProfile, setUserProfile] = useState([]);\n  const [userHasProfile, setUserHasProfile] = useState(false);\n  const [currentAvailableCities, setCurrentAvailableCities] = useState(null);\n\n  //Function to check if the user already has a profile and to set the userProfile hook\n  async function getUserInformation(user) {\n    const response = await fetch('http://localhost:5000/record/');\n    if (!response.ok) {\n      const message = `An error occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const records = await response.json();\n    Object.entries(records).forEach(entry => {\n      const [key, value] = entry;\n      if (value.username === user.email) {\n        const foundUserProfile = records[key];\n        const currentUserProfile = userProfile.concat(foundUserProfile);\n        setUserProfile(currentUserProfile);\n        setUserHasProfile(true);\n        return foundUserProfile;\n      } else {\n        setUserHasProfile(false);\n      }\n    });\n  }\n\n  //Only call this function if user is logged in\n  if (isAuthenticated) {\n    getUserInformation(user);\n  }\n\n  //Function to handle the creation of a new User Profile\n  const handleNewUserProfileCreation = newUserProfile => {\n    const currentUserProfile = userProfile.concat(newUserProfile);\n    setUserHasProfile(true);\n    console.log(currentUserProfile);\n  };\n  let currentlyVisibleState = null;\n  let currentlyVisibleForm = null;\n  if (isAuthenticated && !userHasProfile) {\n    currentlyVisibleForm = /*#__PURE__*/_jsxDEV(StarterQuestionnaire, {\n      user: user,\n      onNewUserProfileCreation: handleNewUserProfileCreation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }, this);\n    currentlyVisibleState = null;\n  } else if (isAuthenticated && userHasProfile) {\n    currentlyVisibleForm = /*#__PURE__*/_jsxDEV(DateInputForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this);\n    currentlyVisibleState = /*#__PURE__*/_jsxDEV(TripInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }, this);\n  } else {\n    currentlyVisibleForm = null;\n    currentlyVisibleState = null;\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [currentlyVisibleForm, currentlyVisibleState]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(TripInfoControl, \"JsPaKzPnVh6eyW4wkR3LL14Dxug=\", false, function () {\n  return [useAuth0];\n});\n_c = TripInfoControl;\n;\nexport default TripInfoControl;\nvar _c;\n$RefreshReg$(_c, \"TripInfoControl\");","map":{"version":3,"names":["React","useState","TripInfo","DateInputForm","StarterQuestionnaire","ReccomendationContainer","useAuth0","TripInfoControl","user","isAuthenticated","userProfile","setUserProfile","userHasProfile","setUserHasProfile","currentAvailableCities","setCurrentAvailableCities","getUserInformation","response","fetch","ok","message","statusText","window","alert","records","json","Object","entries","forEach","entry","key","value","username","email","foundUserProfile","currentUserProfile","concat","handleNewUserProfileCreation","newUserProfile","console","log","currentlyVisibleState","currentlyVisibleForm"],"sources":["/Users/paulkasidit/Desktop/Epicodus/go/client/src/components/TripInfoControl.js"],"sourcesContent":["import React, { useState} from \"react\";\nimport \"./App.css\";\nimport \"./TripInfo/TripInfo.css\"; \nimport TripInfo from './TripInfo/TripInfo';\nimport DateInputForm from './TripInfo/DateInputForm';\nimport StarterQuestionnaire from './TripInfo/StarterQuestionnaire';\nimport ReccomendationContainer from \"./TripInfo/ReccomendationContainer\";\nimport { useAuth0 } from '@auth0/auth0-react';\n\nfunction TripInfoControl (){\n  // Hooks for checking if user is authenticated, for the current userProfile,\n  // and checking if the user has a profile(to decide what to render)\n  const {user, isAuthenticated} = useAuth0();\n  const [userProfile, setUserProfile] = useState([]);\n  const [userHasProfile, setUserHasProfile] = useState(false);\n  const [currentAvailableCities ,setCurrentAvailableCities] = useState(null);\n\n  //Function to check if the user already has a profile and to set the userProfile hook\n  async function getUserInformation(user) {\n    const response = await fetch('http://localhost:5000/record/');\n    if (!response.ok) {\n      const message = `An error occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const records = await response.json();\n\n    Object.entries(records).forEach((entry) => {\n      const [key, value] = entry;\n      if (value.username === user.email){\n        const foundUserProfile = records[key]\n        const currentUserProfile = userProfile.concat(foundUserProfile);\n        setUserProfile(currentUserProfile);\n        setUserHasProfile(true);\n        return foundUserProfile;\n      } else {\n        setUserHasProfile(false);\n      }\n    });\n  }\n\n  //Only call this function if user is logged in\n  if (isAuthenticated){\n     getUserInformation(user)\n  }\n\n\n  //Function to handle the creation of a new User Profile\n  const handleNewUserProfileCreation = (newUserProfile) => { \n    const currentUserProfile = userProfile.concat(newUserProfile)\n    setUserHasProfile(true);\n    console.log(currentUserProfile)\n  }\n\n  \n  let currentlyVisibleState = null;\n  let currentlyVisibleForm = null;\n\n  if(isAuthenticated && !userHasProfile){\n    currentlyVisibleForm =  <StarterQuestionnaire\n                              user = {user}\n                              onNewUserProfileCreation = {handleNewUserProfileCreation}/>\n    currentlyVisibleState = null\n  } else if(isAuthenticated && userHasProfile) {\n    currentlyVisibleForm = <DateInputForm/>\n    currentlyVisibleState = <TripInfo/> \n  } else {\n    currentlyVisibleForm = null\n    currentlyVisibleState = null\n  }\n  \n  return(\n    <React.Fragment>\n      {currentlyVisibleForm}\n      {currentlyVisibleState}\n    </React.Fragment>\n  )\n  \n};\n\nexport default TripInfoControl;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}